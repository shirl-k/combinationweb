<div id="comments-list">
    {{#commentDtos}}
    <div class="card m-2" id="comments-{{id}}"> <!--댓글 바깥여백 2(부트스트랩 클래스 적용)-->
        <div class="card-header">
            {{nickname}} <!--닉네임 보여주기-->

            <!-- Button trigger modal(모달 트리거 버튼 : 버튼 클릭하면 모달 실행됨)-->
            <button type="button"
                    class="btn btn-sm btn-outline-primary"
                    data-bs-toggle="modal"
                    data-bs-target="#comment-edit-modal"
                    data-bs-id="{{id}}"
                    data-bs-nickname="{{nickname}}"
                    data-bs-body="{{body}}"
                    data-bs-boxing-id="{{boxngId}}">수정</button>
            <!--데이터 속성 (data-bs-xx) 댓글 수정하기 위해 이전 댓글 데이터인 트리거 데이터 전달하기-->
            <!--댓글 삭제 버튼-->
            <button type="button"
                    class="btn btn-sm btn-outline-danger comment-delete-btn">삭제</button>
        </div>
        <div class="card-body">
            {{body}}  <!--댓글 본문 보여주기-->
        </div>
    </div>
    {{/commentDtos}}
</div>
<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">댓글 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!--_new.mustache 댓글 수정폼 코드 <form>~</form> 복사 붙여넣음-->
                <!--댓글 수정폼-->
                <form>
                    <!--1. 닉네임 입력 폼-->
                    <div class="mb-3">
                        <label for="exampleInputEmail1" class="form-label">닉네임</label>
                        <input type="text" class="form-control" id="edit-comment-nickname">
                    </div>

                    <!--2. 댓글 본문 입력-->
                    <div class="mb-3">
                        <label for="exampleInputPassword1" class="form-label">댓글 내용</label>
                        <textarea type="text" class="form-control" rows="3" id="edit-comment-body"></textarea>
                    </div> <!--속성 설정(type: text, rows:3, id: new-comment-body)-->

                    <!--3. 히든 인풋 만들기(웸 페이지에는 표시되지 않아서 보이지 않지만 값을 가지고 있을 때 씀)-->
                    <!--**변수 삭제-->
                        <input type="hidden" id="edit-comment-id">         <!--히든 인풋 요소 정의-->
                        <input type="hidden" id="edit-comment-boxing-id">  <!--히든 인풋 요소 정의-->
                    <!--**머스테치 문법으로 사용범위 지정했던 변수 삭제함-->

                    <!--4. 전송 버튼-->
                    <button type="button" class="btn btn-primary" id="comment-update-btn">수정 완료</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!--모달 이벤트 처리 : _list파일의 commentDto에 저장된 데이터를 모달 트리거 버튼의
                            속성 값으로 가져와서, 받아 온 데이터를 모달의 각 폼에 출력-->
<script>
    {
        //모달 요소 선택
        const commentEditModal = document.querySelector("#comment-edit-modal");
        //모달 이벤트 감지
        commentEditModal.addEventListener("show.bs.modal", function (event) {
            //1. 트리거 버튼 선택
            const triggerBtn = event.relatedTarget;
            //2. 데이터 가져오기
            const id = triggerBtn.getAttribute("data-bs-id");
            const nickname = triggerBtn.getAttribute("data-bs-nickname");
            const body = triggerBtn.getAttribute("data-bs-body");
            const boxingId = triggerBtn.getAttribute("data-bs-boxing-id");
            //3. 수정 폼에 데이터 반영});
            document.querySelector("#edit-comment-nickname").value = nickname;
            document.querySelector("#edit-comment-body").value = body;
            document.querySelector("#edit-comment-id").value = id;
            document.querySelector("#edit-comment-boxing-id").value = boxingId;
        });
    }
    {
        //수정 완료 버튼 선택
        const commentUpdateBtn = document.querySelector('#comment-update-btn");
        //클릭 이벤트 처리
        commentUpdateBtn.addEventListner("click",function(){
            //수정 댓글 객체 생성
            const comment={ //객체 변수 선언
                id:document.querySelector("#edit-comment-id").value,
                nickname: document.querySelector("#edit-comment-nickname").value,
                body: document.querySelector("#edit-comment-body").value,
                boxing_id:document.querySelector("#edit-comment-boxing-id").value
            };
            console.log(comment); //객체 생성 확인
            //수정 REST API 호출
            const url = "/api/comments/" + comment.id;
            //fetch() 함수
            fetch(url, {
                method: "PATCH",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(comment)  //comment 객체를 JSON 문자열로 변환 전송
            }).then(response=> {
                //HTTP 응답 코드에 따른 메시지 출력
                const msg = (response.ok) ? "댓글이 수정됐습니다." : "댓글 수정 실패..!";
                alert(msg);
                //현재 페이지 새로 고침
                window.location.reload();
            });
        });
    }
</script>

<!--댓글 삭제-->
<script>
    {
        // 삭제 버튼 선택
        const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");
        //삭제 버튼 이벤트 처리
        //commentDeleteBtn.addEventListener("click", function() {
        //    console.log("삭제 버튼이 클릭됐습니다.");
        //});
        commentDeleteBtns.forEach(btn => {
            btn.addEventListener("click", (event) => { //event 객체 받아오기
                //이벤트 발생 요소 선택
                const commentDeleteBtn = event.target; //삭제 버튼 변수화
                //삭제 댓글 id 가져오기
                const commentId = commentDeleteBtn.getAttribute("data-comment-id"); //id 가져오기
                console.log(`삭제 버튼 클릭: ${commentId}번 댓글`);//콘솔 로그 출력 //백틱
                //삭제 REST API 호출
                const url = `/api/comments/${commentId}`;
                fetch(url, {
                    method: "DELETE"
                }).then(response => {
                    //댓글 삭제 실패 처리
                    if(!response.ok) {
                        alert("댓글 삭제 실패");
                        return;
                    }
                    //삭제 성공 시 메시지 창 띄우기
                    const msg = '${commentId}번 댓글을 삭제했습니다.';
                    alert(msg);
                    //현재 페이지 새로 고침
                    window.location.reload();

                });

            });
        });
    }
</script>



